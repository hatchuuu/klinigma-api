generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admins {
  id           String       @id @default(cuid())
  name         String
  email        String
  password     String
  role         String       @default("admin")
  refreshToken String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime?    @updatedAt
  polyclinic   Polyclinics? @relation(fields: [polyclinicId], references: [id], onDelete: Cascade)
  polyclinicId String?
}

model Users {
  id           String    @id @default(cuid())
  name         String
  email        String    @unique
  password     String
  refreshToken String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  queues       Queues[] // Relasi antara user dan antrean
}

model Schedules {
  id        String  @id @default(cuid())
  doctor    Doctors @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  doctorId  String
  day       String // Contoh: "senin", "selasa"
  startTime String // Jam mulai, contoh: "08:00"
  endTime   String // Jam selesai, contoh: "16:00"
}

model Doctors {
  id             String      @id @default(cuid())
  name           String
  email          String
  polyclinic     Polyclinics @relation(fields: [polyclinicId], references: [id])
  polyclinicId   String
  polyclinicName String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime?   @updatedAt
  schedules      Schedules[]
  queues         Queues[] // Relasi dengan antrean
}

model Polyclinics {
  id             String    @id @default(cuid())
  polyclinicName String    @unique
  descriptions   String
  doctors        Doctors[] // Relasi ke dokter yang terhubung
  admins         Admins[] // Relasi ke dokter yang terhubung
}

model Queues {
  id          String   @id @default(cuid())
  user        Users    @relation(fields: [userId], references: [id])
  userId      String
  doctor      Doctors  @relation(fields: [doctorId], references: [id])
  doctorId    String
  date        DateTime // Tanggal antrean
  time        String // Waktu sesi
  queueNumber Int
  status      String   @default("waiting")

  @@unique([userId, date, time]) // Membatasi user hanya bisa mendaftar sekali di waktu dan tanggal yang sama
}
